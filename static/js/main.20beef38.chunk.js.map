{"version":3,"sources":["components/Search/search.jsx","components/header/header.js","pages/home/home.jsx","useMovieSearch.js","components/moviedetail/movieDetail.jsx","App.js","index.js"],"names":["Search","handleSearch","query","placeholder","type","onChange","value","header","className","to","App","useState","setQuery","pageNumber","setPageNumber","loading","setLoading","error","setError","hasMore","setHasMore","movies","setMovies","useEffect","axios","method","url","params","s","page","then","res","data","Response","prevMovies","console","log","length","useMoviesSearch","observer","useRef","lastMoviesElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","e","target","map","movie","index","ref","key","imdbID","Title","src","Poster","Year","MovieDetail","selected","setSelected","movieId","useParams","a","apiurl","fetchData","alt","Country","Type","Plot","Runtime","Language","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.20beef38.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./search.css\";\r\n\r\nexport default function Search({ handleSearch, query }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder=\"movie name\"\r\n        type=\"text\"\r\n        onChange={handleSearch}\r\n        value={query}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nexport default function header() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <Link to=\"/\" className=\"title\">\r\n          <h2>MOFLIX</h2>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useCallback } from \"react\";\r\nimport Search from \"../../components/Search/search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport useMoviesSearch from \"../../useMovieSearch\";\r\nimport Header from \"../../components/header/header\";\r\nfunction App() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const { movies, hasMore, loading, error } = useMoviesSearch(\r\n    query,\r\n    pageNumber\r\n  );\r\n  console.log(query, pageNumber);\r\n\r\n  const observer = useRef();\r\n  const lastMoviesElementRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  function handleSearch(e) {\r\n    setQuery(e.target.value);\r\n    setPageNumber(1);\r\n  }\r\n  console.log(movies);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <span className=\"movieIcon\">ðŸŽ¬</span>\r\n      <Search handleSearch={handleSearch} query={query} />\r\n      <div className=\"movieList\">\r\n        {movies.map((movie, index) => {\r\n          if (movies.length === index + 1) {\r\n            return (\r\n              <div ref={lastMoviesElementRef} key={movie.imdbID}>\r\n                <div> {movie.Title}</div>\r\n                <Link to={`/moflix/${movie.imdbID}`}>\r\n                  <img src={`${movie.Poster}`} />\r\n                </Link>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"moviesresults\" key={movie.Title}>\r\n                <Link to={`/${movie.imdbID}`}>\r\n                  <img src={`${movie.Poster}`} />{\" \"}\r\n                </Link>\r\n                <div className=\"desc\">\r\n                  {movie.Title}\r\n                  <br />\r\n                  {movie.Year}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div>{loading && \"NO MORE ðŸ˜·ðŸ˜·\"}</div>\r\n      <div>{error && \"Error\"}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function useMovieSearch(query, pageNumber) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMovies([]);\r\n  }, [query]);\r\n\r\n  const apiurl = \"https://www.omdbapi.com/?apikey=cfce499a&\";\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    axios({\r\n      method: \"GET\",\r\n      url: apiurl,\r\n      params: { s: query, page: pageNumber },\r\n    }).then((res) => {\r\n      if (res.data.Response !== \"False\") {\r\n        setMovies((prevMovies) => [...prevMovies, ...res.data.Search]);\r\n        console.log(\"hasMore hook\", res.data.Search.length > 0);\r\n        setHasMore(res.data.Search.length > 0);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, [query, pageNumber]);\r\n  return { loading, error, movies, hasMore };\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./movieDetail.css\";\r\nimport axios from \"axios\";\r\n\r\nconst MovieDetail = () => {\r\n  const [selected, setSelected] = useState({});\r\n  const { movieId } = useParams();\r\n  const apiurl = \"http://www.omdbapi.com/?apikey=cfce499a\";\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios(apiurl + \"&i=\" + movieId);\r\n      setSelected(data);\r\n    };\r\n    fetchData();\r\n  }, [movieId]);\r\n  console.log(selected);\r\n  return (\r\n    <div className=\"movieDetailList\">\r\n      <div className=\"movie\">\r\n        <img src={selected.Poster} alt=\"poster\" />\r\n        <ul className=\"list\">\r\n          <li>{selected.Title}</li>\r\n          <li>\r\n            {selected.Country} {selected.Type}{\" \"}\r\n          </li>\r\n          <br />\r\n          <li>PLOT</li>\r\n          <li>{selected.Plot}</li>\r\n          <br />\r\n          <li>{selected.Runtime}</li>\r\n          <li>{selected.Language}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieDetail;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/home/home\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport MovieDetail from \"./components/moviedetail/movieDetail\";\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/moflix/:movieId\">\n          <MovieDetail />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename=\"/moflix\">\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}